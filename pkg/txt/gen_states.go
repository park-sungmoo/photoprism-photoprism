//go:build ignore
// +build ignore

// This generates states.go by running "go generate"
package main

import (
	"bufio"
	"os"
	"strings"
	"text/template"

	"github.com/photoprism/photoprism/pkg/txt"
)

type State struct {
	Code string
	Name string
}

var states []State

func main() {
	file, err := os.Open("./resources/states.txt")
	defer file.Close()

	if err != nil {
		panic(err)
	}

	scanner := bufio.NewScanner(file)
	scanner.Split(bufio.ScanLines)

	for scanner.Scan() {
		parts := strings.Split(scanner.Text(), ":")

		if len(parts) < 2 {
			continue
		}

		states = append(states, State{Code: strings.ToUpper(parts[0]), Name: txt.Title(parts[1])})
	}

	f, err := os.Create("states.go")

	if err != nil {
		panic(err)
	}

	defer f.Close()

	packageTemplate.Execute(f, struct {
		States []State
	}{
		States: states,
	})
}

var packageTemplate = template.Must(template.New("").Parse(`// Code generated by go generate; DO NOT EDIT.
package txt

var States = map[string]string{
{{- range .States }}
	{{ printf "%q" .Code }}: {{ printf "%q" .Name }},
{{- end }}
}`))
